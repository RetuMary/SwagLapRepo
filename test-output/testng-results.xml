<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-03T01:21:20 EDT" name="Default suite" finished-at="2024-08-03T01:21:38 EDT" duration-ms="18507">
    <groups>
    </groups>
    <test started-at="2024-08-03T01:21:20 EDT" name="Default test" finished-at="2024-08-03T01:21:38 EDT" duration-ms="18507">
      <class name="testCases.LoginTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:20 EDT" name="setUp" finished-at="2024-08-03T01:21:26 EDT" duration-ms="5789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:26 EDT" name="setUp" finished-at="2024-08-03T01:21:27 EDT" duration-ms="1339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="VerifyApplicationUrl()[pri:1, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:27 EDT" name="VerifyApplicationUrl" finished-at="2024-08-03T01:21:27 EDT" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyApplicationUrl -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:27 EDT" name="tearDown" finished-at="2024-08-03T01:21:27 EDT" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:27 EDT" name="setUp" finished-at="2024-08-03T01:21:36 EDT" duration-ms="8694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="VerifyApplicationTitle()[pri:2, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:36 EDT" name="VerifyApplicationTitle" finished-at="2024-08-03T01:21:36 EDT" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyApplicationTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:36 EDT" name="tearDown" finished-at="2024-08-03T01:21:36 EDT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:36 EDT" name="setUp" finished-at="2024-08-03T01:21:37 EDT" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="VerifyApplicationLogin()[pri:3, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:37 EDT" name="VerifyApplicationLogin" finished-at="2024-08-03T01:21:38 EDT" duration-ms="498" status="FAIL">
          <exception class="java.nio.file.InvalidPathException">
            <message>
              <![CDATA[Illegal char <"> at index 62: C:\Users\rodri\eclipse-New-Workspace\SwagLabs\target\login.png"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.nio.file.InvalidPathException: Illegal char <"> at index 62: C:\Users\rodri\eclipse-New-Workspace\SwagLabs\target\login.png"
at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)
at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:232)
at java.base/java.io.File.toPath(File.java:2387)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:811)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:838)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:746)
at testCases.ScreenShot.takeScreenshot(ScreenShot.java:32)
at testCases.LoginTest.VerifyApplicationLogin(LoginTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.file.InvalidPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyApplicationLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:38 EDT" name="tearDown" finished-at="2024-08-03T01:21:38 EDT" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginTest@1aafa419]" started-at="2024-08-03T01:21:38 EDT" name="tearDown" finished-at="2024-08-03T01:21:38 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
